stages:
  - name: self-test
    if: type = push
  - name: integration
    if: branch = master OR type = pull_request

env:
  global:
    - SYS=22
    - ABI="default;armeabi-v7a"
    - ADB_INSTALL_TIMEOUT=10 # minutes
    - EMULATOR_VERSION=4969155 # ver 27.3.10.

_integration_job_template: &integration_job_template
  stage: integration
  cache: npm
  install:
    - nvm install 11
    - node --version
    - gem install xcodeproj
    - npm install
    - npm install -g yarn
    - npm install -g react-native-cli
  before_script:
    - integration-tests/scripts/make-project $RN_VERSION integration-tests/Setup

_android_job_template: &android_job_template
  <<: *integration_job_template
  language: generic
  dist: trusty
  before_install:
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    - sleep 3 # give xvfb some time to start
    # Install android tools
    - ANDROID_TOOLS=4333796 # android-28
    - export ANDROID_HOME=~/android-sdk
    - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
    - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
    - rm android-sdk-tools.zip
    - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
    # Silence warning.
    - mkdir -p ~/.android
    - touch ~/.android/repositories.cfg
    # Accept licenses before installing components, no need to echo y for each component
    - yes | sdkmanager --licenses
    # Platform tools
    - sdkmanager "tools" "platform-tools" > /dev/null
    - sdkmanager --list | head -15
    # Android emulator
    - wget -q "https://dl.google.com/android/repository/emulator-linux-$EMULATOR_VERSION.zip" -O emulator.zip
    - unzip -q emulator.zip -d ${ANDROID_HOME}
    - rm emulator.zip
    # install older build tools (for emulator)
    - sdkmanager "build-tools;28.0.3" "build-tools;25.0.2" "platforms;android-28" "platforms;android-25" > /dev/null
    # Create and start emulator.
    - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
    - sdkmanager --list | head -15
    - echo no | avdmanager create avd --force -n test -k "system-images;android-$SYS;$ABI"
    - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -no-boot-anim &
  # before_script will make project
  script:
    - integration-tests/scripts/wait-for-emulator
    - adb shell settings put global window_animation_scale 0 &
    - adb shell settings put global transition_animation_scale 0 &
    - adb shell settings put global animator_duration_scale 0 &
    - adb shell input keyevent 82 &
    - cd integration-tests/Setup
    - node_modules/.bin/flow check
    - cd android
    - npm start &
    - sleep 5
    - curl -s http://localhost:8081/index.bundle\?platform\=android\&dev\=true\&minify\=false > /dev/null
    - ./gradlew connectedAndroidTest

_ios_job_template: &ios_job_template
  <<: *integration_job_template
  language: objective-c
  os: osx
  osx_image: xcode11.4
  xcode_project: integration-tests/Setup/ios/Setup.xcodeproj
  xcode_scheme: Setup
  xcode_destination: platform=iOS Simulator
  # before_script will make project
  script:
    - travis_wait 30 integration-tests/scripts/build-ios-project integration-tests/Setup

matrix:
  include:
    - language: node_js
      stage: self-test
      node_js: 8
      script:
        - npm install
        - npm run lint
        - npm test

    # Integration tests for different React Native versions

    - <<: *android_job_template
      name: 'Integrate with RN 0.62.2 Android'
      env: RN_VERSION=0.62.2
    - <<: *ios_job_template
      name: 'Integrate with RN 0.62.2 iOS'
      env: RN_VERSION=0.62.2

    - <<: *android_job_template
      name: 'Integrate with RN 0.61.5 Android'
      env: RN_VERSION=0.61.5
    - <<: *ios_job_template
      name: 'Integrate with RN 0.61.5 iOS'
      env: RN_VERSION=0.61.5

    - <<: *android_job_template
      name: 'Integrate with RN 0.60.6 Android'
      env: RN_VERSION=0.60.6
    - <<: *ios_job_template
      name: 'Integrate with RN 0.60.6 iOS'
      env: RN_VERSION=0.60.6

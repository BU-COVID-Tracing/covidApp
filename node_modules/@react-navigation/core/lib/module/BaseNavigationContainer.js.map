{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","ScheduleUpdateContext","useFocusedListeners","useDevTools","useStateGetters","useOptionsGetters","useEventEmitter","useSyncState","isSerializable","NavigationStateContext","DEVTOOLS_CONFIG_KEY","NOT_INITIALIZED_ERROR","hasWarnedForSerialization","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","initialState","onStateChange","independent","children","ref","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","skipTrackingRef","navigatorKeyRef","getKey","useCallback","current","setKey","reset","trackState","trackAction","enabled","global","name","listeners","addListener","addFocusedListener","getStateForRoute","addStateGetter","dispatch","action","navigation","canGoBack","result","handled","resetRoot","getRootState","getCurrentRoute","index","emitter","addOptionsGetter","getCurrentOptions","useImperativeHandle","Object","keys","reduce","acc","args","create","dangerouslyGetState","dangerouslyGetParent","builderContext","useMemo","scheduleContext","context","onStateChangeRef","useEffect","process","env","NODE_ENV","console","warn","emit","type","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useFocusedListeners from './useFocusedListeners';\nimport useDevTools from './useDevTools';\nimport useStateGetters from './useStateGetters';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport isSerializable from './isSerializable';\n\nimport { NavigationContainerRef, NavigationContainerProps } from './types';\nimport NavigationStateContext from './NavigationStateContext';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst DEVTOOLS_CONFIG_KEY =\n  'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED';\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nlet hasWarnedForSerialization = false;\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  // @ts-ignore\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n    const skipTrackingRef = React.useRef<boolean>(false);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const reset = React.useCallback(\n      (state: NavigationState) => {\n        skipTrackingRef.current = true;\n        setState(state);\n      },\n      [setState]\n    );\n\n    const { trackState, trackAction } = useDevTools({\n      enabled:\n        // @ts-ignore\n        DEVTOOLS_CONFIG_KEY in global ? global[DEVTOOLS_CONFIG_KEY] : false,\n      name: '@react-navigation',\n      reset,\n      state,\n    });\n\n    const {\n      listeners,\n      addListener: addFocusedListener,\n    } = useFocusedListeners();\n\n    const { getStateForRoute, addStateGetter } = useStateGetters();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        trackAction('@@RESET_ROOT');\n        setState(state);\n      },\n      [setState, trackAction]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return getStateForRoute('root');\n    }, [getStateForRoute]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-ignore\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const builderContext = React.useMemo(\n      () => ({\n        addFocusedListener,\n        addStateGetter,\n        trackAction,\n      }),\n      [addFocusedListener, trackAction, addStateGetter]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        addOptionsGetter,\n      }),\n      [getKey, getState, setKey, setState, state, addOptionsGetter]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          state !== undefined &&\n          !isSerializable(state) &&\n          !hasWarnedForSerialization\n        ) {\n          hasWarnedForSerialization = true;\n\n          console.warn(\n            \"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\"\n          );\n        }\n      }\n\n      emitter.emit({\n        type: 'state',\n        data: { state },\n      });\n\n      if (skipTrackingRef.current) {\n        skipTrackingRef.current = false;\n      } else {\n        trackState(getRootState);\n      }\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [trackState, getRootState, emitter, state]);\n\n    return (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"]}
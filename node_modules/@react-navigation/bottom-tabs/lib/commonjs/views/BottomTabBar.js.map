{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","safeAreaInsets","showIcon","showLabel","style","tabStyle","colors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","isKeyboardShown","setIsKeyboardShown","React","useState","shouldShowTabBar","tabBarVisible","isTabBarHidden","setIsTabBarHidden","visible","Animated","Value","useEffect","timing","toValue","duration","start","finished","dimensions","setDimensions","height","width","Dimensions","get","handleOrientationChange","window","addEventListener","handleKeyboardShow","handleKeyboardHide","Keyboard","addListener","removeEventListener","removeListener","layout","setLayout","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  safeAreaInsets,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    if (shouldShowTabBar) {\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [shouldShowTabBar, visible]);\n\n  const [dimensions, setDimensions] = React.useState(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layout.height + insets.bottom, 0],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : null,\n        },\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showIcon={showIcon}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}